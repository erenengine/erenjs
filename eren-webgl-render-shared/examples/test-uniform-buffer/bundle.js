(()=>{"use strict";const e=WebGL2RenderingContext.ARRAY_BUFFER,t=WebGL2RenderingContext.ELEMENT_ARRAY_BUFFER,r=WebGL2RenderingContext.STATIC_DRAW,i=WebGL2RenderingContext.FLOAT;WebGL2RenderingContext.LESS;class o{#e;#t;constructor(e,t,r){this.#e=e,this.#t=this.#e.createProgram(t,r)}use(){this.#e.useProgram(this.#t)}getUniformLocation(e){const t=this.#e.getUniformLocation(this.#t,e);if(!t)throw new Error(`Failed to get uniform location (${e})`);return t}}var a,n=1e-6,s="undefined"!=typeof Float32Array?Float32Array:Array;function l(e,t){var r=new s(2);return r[0]=e,r[1]=t,r}function h(e,t,r){var i=new s(3);return i[0]=e,i[1]=t,i[2]=r,i}function E(){var e=new s(16);return s!=Float32Array&&(e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0),e[0]=1,e[5]=1,e[10]=1,e[15]=1,e}Math.random,Math.PI,Math.hypot||(Math.hypot=function(){for(var e=0,t=arguments.length;t--;)e+=arguments[t]*arguments[t];return Math.sqrt(e)}),a=new s(2),s!=Float32Array&&(a[0]=0,a[1]=0),function(){var e=new s(3);s!=Float32Array&&(e[0]=0,e[1]=0,e[2]=0)}();const g={r:.1921,g:.302,b:.4745,a:1},u=[{pos:l(-.5,-.5),color:h(1,0,0)},{pos:l(.5,-.5),color:h(0,1,0)},{pos:l(.5,.5),color:h(0,0,1)},{pos:l(-.5,.5),color:h(1,1,1)}],c=[0,1,2,2,3,0];class T{#e;#t;#r;#i;#o;#a;#n;constructor(e){this.#e=e,this.#t=new o(e,"#version 300 es\nprecision mediump float;\n\nuniform mat4 uModel;\nuniform mat4 uView;\nuniform mat4 uProj;\n\nlayout(location = 0) in vec2 aPosition;\nlayout(location = 1) in vec3 aColor;\n\nout vec3 vColor;\n\nvoid main() {\n    gl_Position = uProj * uView * uModel * vec4(aPosition, 0.0, 1.0);\n    vColor = aColor;\n}\n","#version 300 es\nprecision mediump float;\n\nin  vec3 vColor;\nout vec4 outColor;\n\nvoid main() {\n    outColor = vec4(vColor, 1.0);\n}\n"),this.#r=e.createVertexArray(function(e){const t=new Float32Array(5*e.length);for(let r=0;r<e.length;r++){const i=5*r;t.set(e[r].pos,i+0),t.set(e[r].color,i+2)}return t}(u),new Uint16Array(c)),e.enableVertexAttribArray(0),e.vertexAttribPointer(0,2,i,!1,20,0),e.enableVertexAttribArray(1),e.vertexAttribPointer(1,3,i,!1,20,8),this.#i=this.#t.getUniformLocation("uModel"),this.#o=this.#t.getUniformLocation("uView"),this.#a=this.#t.getUniformLocation("uProj"),this.#n=Date.now()}#s(e,t){const r=(performance.now()-this.#n)/1e3,i={model:E(),view:E(),proj:E()};!function(e,t){var r=Math.sin(t),i=Math.cos(t);e[0]=i,e[1]=r,e[2]=0,e[3]=0,e[4]=-r,e[5]=i,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=1,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1}(i.model,-90*r*Math.PI/180);const o=h(2,2,2),a=h(0,0,0),s=h(0,0,1);!function(e,t,r,i){var o,a,s,l,h,E,g,u,c,T,f=t[0],m=t[1],d=t[2],R=i[0],A=i[1],b=i[2],_=r[0],F=r[1],P=r[2];Math.abs(f-_)<n&&Math.abs(m-F)<n&&Math.abs(d-P)<n?function(e){e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=1,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=1,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1}(e):(g=f-_,u=m-F,c=d-P,o=A*(c*=T=1/Math.hypot(g,u,c))-b*(u*=T),a=b*(g*=T)-R*c,s=R*u-A*g,(T=Math.hypot(o,a,s))?(o*=T=1/T,a*=T,s*=T):(o=0,a=0,s=0),l=u*s-c*a,h=c*o-g*s,E=g*a-u*o,(T=Math.hypot(l,h,E))?(l*=T=1/T,h*=T,E*=T):(l=0,h=0,E=0),e[0]=o,e[1]=l,e[2]=g,e[3]=0,e[4]=a,e[5]=h,e[6]=u,e[7]=0,e[8]=s,e[9]=E,e[10]=c,e[11]=0,e[12]=-(o*f+a*m+s*d),e[13]=-(l*f+h*m+E*d),e[14]=-(g*f+u*m+c*d),e[15]=1)}(i.view,o,a,s);const l=e/t;return function(e,t,r,i,o){var a,n=1/Math.tan(t/2);e[0]=n/r,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=n,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[11]=-1,e[12]=0,e[13]=0,e[15]=0,null!=o&&o!==1/0?(a=1/(i-o),e[10]=(o+i)*a,e[14]=2*o*i*a):(e[10]=-1,e[14]=-2*i)}(i.proj,Math.PI/4,l,.1,10),i}recordCommands(e,t){this.#e.clearColor(g),this.#t.use(),this.#e.bindVertexArray(this.#r);const r=this.#s(e,t);this.#e.uniformMatrix4fv(this.#i,!1,r.model),this.#e.uniformMatrix4fv(this.#o,!1,r.view),this.#e.uniformMatrix4fv(this.#a,!1,r.proj),this.#e.drawIndexed(c.length,1)}}const f=document.getElementById("canvas"),m=new class{#e;constructor(e){this.#e=e}#l(e,t){const r=this.#e.createShader(t);if(!r)throw new Error("Failed to create shader");if(this.#e.shaderSource(r,e),this.#e.compileShader(r),!this.#e.getShaderParameter(r,this.#e.COMPILE_STATUS)){const e=this.#e.getShaderInfoLog(r);throw this.#e.deleteShader(r),new Error("Failed to compile shader: "+e)}return r}createProgram(e,t){const r=this.#l(e,this.#e.VERTEX_SHADER),i=this.#l(t??"#version 300 es\nprecision mediump float;\nvoid main() { }",this.#e.FRAGMENT_SHADER),o=this.#e.createProgram();if(this.#e.attachShader(o,r),i&&this.#e.attachShader(o,i),this.#e.linkProgram(o),!this.#e.getProgramParameter(o,this.#e.LINK_STATUS)){const e=this.#e.getProgramInfoLog(o);throw this.#e.deleteProgram(o),new Error("Failed to link program: "+e)}return o}useProgram(e){this.#e.useProgram(e)}createVertexArray(i,o){const a=this.#e.createVertexArray();this.#e.bindVertexArray(a);const n=this.#e.createBuffer();if(this.#e.bindBuffer(e,n),this.#e.bufferData(e,i,r),o){const e=this.#e.createBuffer();this.#e.bindBuffer(t,e),this.#e.bufferData(t,o,r)}return a}bindVertexArray(e){this.#e.bindVertexArray(e)}createBuffer(){return this.#e.createBuffer()}bindBuffer(e,t){this.#e.bindBuffer(e,t)}bufferData(e,t,r){this.#e.bufferData(e,t,r)}enableVertexAttribArray(e){this.#e.enableVertexAttribArray(e)}vertexAttribPointer(e,t,r,i,o,a){this.#e.vertexAttribPointer(e,t,r,i,o,a)}uniformMatrix4fv(e,t,r){this.#e.uniformMatrix4fv(e,t,r)}uniform3fv(e,t){this.#e.uniform3fv(e,t)}getUniformLocation(e,t){return this.#e.getUniformLocation(e,t)}clearColor(e){this.#e.clearColor(e.r,e.g,e.b,e.a),this.#e.clear(this.#e.COLOR_BUFFER_BIT)}draw(e,t){this.#e.drawArraysInstanced(this.#e.TRIANGLES,0,e,t)}drawElements(e){this.#e.drawElements(this.#e.TRIANGLES,e,this.#e.UNSIGNED_SHORT,0)}drawIndexed(e,t){this.#e.drawElementsInstanced(this.#e.TRIANGLE_STRIP,e,this.#e.UNSIGNED_SHORT,0,t)}enableDepthTest(){this.#e.enable(this.#e.DEPTH_TEST)}disableDepthTest(){this.#e.disable(this.#e.DEPTH_TEST)}depthFunc(e){this.#e.depthFunc(e)}clearDepth(e){this.#e.clearDepth(e),this.#e.clear(this.#e.DEPTH_BUFFER_BIT)}createImageTexture(e){const t=this.#e,r=t.createTexture();return t.bindTexture(t.TEXTURE_2D,r),t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,e),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.LINEAR),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.LINEAR),t.bindTexture(t.TEXTURE_2D,null),r}createDepthTexture(e,t){const r=this.#e,i=r.createTexture();return r.bindTexture(r.TEXTURE_2D,i),r.texImage2D(r.TEXTURE_2D,0,r.DEPTH_COMPONENT24,e,t,0,r.DEPTH_COMPONENT,r.UNSIGNED_INT,null),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_COMPARE_MODE,r.COMPARE_REF_TO_TEXTURE),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_COMPARE_FUNC,r.LESS),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MIN_FILTER,r.NEAREST),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MAG_FILTER,r.NEAREST),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE),r.bindTexture(r.TEXTURE_2D,null),i}createDepthFramebuffer(e){const t=this.#e,r=t.createFramebuffer();if(!r)throw new Error("Failed to create shadow framebuffer");t.bindFramebuffer(t.FRAMEBUFFER,r),t.framebufferTexture2D(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.TEXTURE_2D,e,0),t.drawBuffers([t.NONE]),t.readBuffer(t.NONE);const i=t.checkFramebufferStatus(t.FRAMEBUFFER);if(i!==t.FRAMEBUFFER_COMPLETE)throw new Error(`Incomplete shadow framebuffer: 0x${i.toString(16)}`);return t.bindFramebuffer(t.FRAMEBUFFER,null),r}bindDepthFramebuffer(e){this.#e.bindFramebuffer(this.#e.FRAMEBUFFER,e),this.#e.colorMask(!1,!1,!1,!1)}restoreFramebufferDefaultState(){this.#e.bindVertexArray(null),this.#e.bindFramebuffer(this.#e.FRAMEBUFFER,null),this.#e.colorMask(!0,!0,!0,!0)}deleteTexture(e){this.#e.deleteTexture(e)}deleteFramebuffer(e){this.#e.deleteFramebuffer(e)}bindImageTexture(e,t){const r=this.#e;r.activeTexture(r.TEXTURE0),r.bindTexture(r.TEXTURE_2D,e),r.uniform1i(t,0)}bindRawDepthTexture(e,t){const r=this.#e;r.activeTexture(r.TEXTURE0),r.bindTexture(r.TEXTURE_2D,e),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_COMPARE_MODE,r.NONE),r.uniform1i(t,0)}}(f.getContext("webgl2")),d=new class{#h;constructor(e){this.#h=new T(e)}render(e,t){this.#h.recordCommands(e,t)}}(m);!function e(){d.render(f.width,f.height),requestAnimationFrame(e)}()})();