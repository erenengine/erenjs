(()=>{"use strict";const e=WebGL2RenderingContext.ARRAY_BUFFER,r=WebGL2RenderingContext.ELEMENT_ARRAY_BUFFER,t=WebGL2RenderingContext.STATIC_DRAW;WebGL2RenderingContext.FLOAT,WebGL2RenderingContext.LESS;class i{#e;#r;constructor(e,r,t){this.#e=e,this.#r=this.#e.createProgram(r,t)}use(){this.#e.useProgram(this.#r)}getUniformLocation(e){const r=this.#e.getUniformLocation(this.#r,e);if(!r)throw new Error(`Failed to get uniform location (${e})`);return r}}const n={r:.1921,g:.302,b:.4745,a:1};class a{#e;#r;constructor(e){this.#e=e,this.#r=new i(e,"#version 300 es\nprecision mediump float;      // WebGL2 에서는 명시적 정밀도 필요\n\nout vec3 vColor;              // fragment 로 넘길 색상\n\n// 내부 상수 배열\nconst vec2 positions[3] = vec2[3](\n    vec2( 0.0, -0.5),\n    vec2( 0.5,  0.5),\n    vec2(-0.5,  0.5)\n);\n\nconst vec3 colors[3] = vec3[3](\n    vec3(1.0, 0.0, 0.0),\n    vec3(0.0, 1.0, 0.0),\n    vec3(0.0, 0.0, 1.0)\n);\n\nvoid main() {\n    // WebGL2 에서는 gl_VertexID 사용\n    vec2 p = positions[gl_VertexID];\n    // Y축 뒤집기\n    gl_Position = vec4(p.x, -p.y, 0.0, 1.0);\n    vColor      = colors[gl_VertexID];\n}\n","#version 300 es\nprecision mediump float;\n\nin vec3 vColor;\nout vec4 fragColor;\n\nvoid main() {\n    fragColor = vec4(vColor, 1.0);\n}\n")}recordCommands(){this.#e.clearColor(n),this.#r.use(),this.#e.draw(3,1)}}const s=document.getElementById("canvas"),o=new class{#e;constructor(e){this.#e=e}#t(e,r){const t=this.#e.createShader(r);if(!t)throw new Error("Failed to create shader");if(this.#e.shaderSource(t,e),this.#e.compileShader(t),!this.#e.getShaderParameter(t,this.#e.COMPILE_STATUS)){const e=this.#e.getShaderInfoLog(t);throw this.#e.deleteShader(t),new Error("Failed to compile shader: "+e)}return t}createProgram(e,r){const t=this.#t(e,this.#e.VERTEX_SHADER),i=this.#t(r??"#version 300 es\nprecision mediump float;\nvoid main() { }",this.#e.FRAGMENT_SHADER),n=this.#e.createProgram();if(this.#e.attachShader(n,t),i&&this.#e.attachShader(n,i),this.#e.linkProgram(n),!this.#e.getProgramParameter(n,this.#e.LINK_STATUS)){const e=this.#e.getProgramInfoLog(n);throw this.#e.deleteProgram(n),new Error("Failed to link program: "+e)}return n}useProgram(e){this.#e.useProgram(e)}createVertexArray(i,n){const a=this.#e.createVertexArray();this.#e.bindVertexArray(a);const s=this.#e.createBuffer();if(this.#e.bindBuffer(e,s),this.#e.bufferData(e,i,t),n){const e=this.#e.createBuffer();this.#e.bindBuffer(r,e),this.#e.bufferData(r,n,t)}return a}bindVertexArray(e){this.#e.bindVertexArray(e)}createBuffer(){return this.#e.createBuffer()}bindBuffer(e,r){this.#e.bindBuffer(e,r)}bufferData(e,r,t){this.#e.bufferData(e,r,t)}enableVertexAttribArray(e){this.#e.enableVertexAttribArray(e)}vertexAttribPointer(e,r,t,i,n,a){this.#e.vertexAttribPointer(e,r,t,i,n,a)}uniformMatrix4fv(e,r,t){this.#e.uniformMatrix4fv(e,r,t)}uniform3fv(e,r){this.#e.uniform3fv(e,r)}getUniformLocation(e,r){return this.#e.getUniformLocation(e,r)}clearColor(e){this.#e.clearColor(e.r,e.g,e.b,e.a),this.#e.clear(this.#e.COLOR_BUFFER_BIT)}draw(e,r){this.#e.drawArraysInstanced(this.#e.TRIANGLES,0,e,r)}drawElements(e){this.#e.drawElements(this.#e.TRIANGLES,e,this.#e.UNSIGNED_SHORT,0)}drawIndexed(e,r){this.#e.drawElementsInstanced(this.#e.TRIANGLE_STRIP,e,this.#e.UNSIGNED_SHORT,0,r)}enableDepthTest(){this.#e.enable(this.#e.DEPTH_TEST)}disableDepthTest(){this.#e.disable(this.#e.DEPTH_TEST)}depthFunc(e){this.#e.depthFunc(e)}clearDepth(e){this.#e.clearDepth(e),this.#e.clear(this.#e.DEPTH_BUFFER_BIT)}createImageTexture(e){const r=this.#e,t=r.createTexture();return r.bindTexture(r.TEXTURE_2D,t),r.texImage2D(r.TEXTURE_2D,0,r.RGBA,r.RGBA,r.UNSIGNED_BYTE,e),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MIN_FILTER,r.LINEAR),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MAG_FILTER,r.LINEAR),r.bindTexture(r.TEXTURE_2D,null),t}createDepthTexture(e,r){const t=this.#e,i=t.createTexture();return t.bindTexture(t.TEXTURE_2D,i),t.texImage2D(t.TEXTURE_2D,0,t.DEPTH_COMPONENT24,e,r,0,t.DEPTH_COMPONENT,t.UNSIGNED_INT,null),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_COMPARE_MODE,t.COMPARE_REF_TO_TEXTURE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_COMPARE_FUNC,t.LESS),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.NEAREST),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.NEAREST),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),t.bindTexture(t.TEXTURE_2D,null),i}createDepthFramebuffer(e){const r=this.#e,t=r.createFramebuffer();if(!t)throw new Error("Failed to create shadow framebuffer");r.bindFramebuffer(r.FRAMEBUFFER,t),r.framebufferTexture2D(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.TEXTURE_2D,e,0),r.drawBuffers([r.NONE]),r.readBuffer(r.NONE);const i=r.checkFramebufferStatus(r.FRAMEBUFFER);if(i!==r.FRAMEBUFFER_COMPLETE)throw new Error(`Incomplete shadow framebuffer: 0x${i.toString(16)}`);return r.bindFramebuffer(r.FRAMEBUFFER,null),t}bindDepthFramebuffer(e){this.#e.bindFramebuffer(this.#e.FRAMEBUFFER,e),this.#e.colorMask(!1,!1,!1,!1)}restoreFramebufferDefaultState(){this.#e.bindVertexArray(null),this.#e.bindFramebuffer(this.#e.FRAMEBUFFER,null),this.#e.colorMask(!0,!0,!0,!0)}deleteTexture(e){this.#e.deleteTexture(e)}deleteFramebuffer(e){this.#e.deleteFramebuffer(e)}bindImageTexture(e,r){const t=this.#e;t.activeTexture(t.TEXTURE0),t.bindTexture(t.TEXTURE_2D,e),t.uniform1i(r,0)}bindRawDepthTexture(e,r){const t=this.#e;t.activeTexture(t.TEXTURE0),t.bindTexture(t.TEXTURE_2D,e),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_COMPARE_MODE,t.NONE),t.uniform1i(r,0)}}(s.getContext("webgl2")),l=new class{#i;constructor(e){this.#i=new a(e)}render(){this.#i.recordCommands()}}(o);!function e(){l.render(),requestAnimationFrame(e)}()})();